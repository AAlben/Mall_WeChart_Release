@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}

<style type="text/css">
    .order-type > li {
        display: inline-block;
        padding: 0 30px;
        line-height: 44px;
        border-bottom: 1px solid #ededed;
        text-align: center;
        font-size: 14px;
        color: #666;
        cursor: pointer;
        position: relative;
    }

        .order-type > li.cur {
            height: 41px;
            border-bottom: 4px solid #585858;
            color: #111;
        }

    .br-margin {
        margin-top: 13px;
    }

    .foot-margin {
        margin-bottom: 100px;
    }

    .J_Item {
        width: 200px;
    }
</style>

@section LayoutFoot{

    <script type="text/javascript">
        //淘宝前端所写日历控件
        YUI({
            modules: {
                'trip-calendar': {
                    fullpath: '../../StaticContent/Admin/js/trip-calendar.js',
                    type: 'js',
                    requires: ['trip-calendar-css']
                },
                'trip-calendar-css': {
                    fullpath: '../../StaticContent/Admin/css/trip-calendar.css',
                    type: 'css'
                }
            }
        }).use('trip-calendar', function (Y) {

            /**
             * 弹出式日历实例
             * 将日历与指定的触发元素绑定
             * 日历可根据浏览器窗口大小，自动调整显示位置
             */
            var oCal = new Y.TripCalendar({
                //绑定日历的节点，支持选择器模式，可批量设置（必选）
                triggerNode: '#startdate , #enddate'
            });

            oCal.on('dateclick', function (e) {
                this.getCurrentNode().setAttribute('data-date', e.date);
            });

            //显示日历时自定义事件
            oCal.on('show', function () {
                var v = this.getCurrentNode().getAttribute('data-date');
                this.set('date', v || new Date);
                this.set('selectedDate', v).render();
            });

            //解决chrome的foucs事件bug
            Y.on('click', function (e) {
                e.currentTarget.focus();
            }, 'button, .J_Link');

            //Query 方法
            $('#btnQuery').on('click', function () {

                LoadStart();

                var state = $('#hState').val();

                var startdate = Y.one("#startdate").get('value');
                var enddate = Y.one("#enddate").get('value');

                if (!startdate) { startdate = $('#startdate').prev('span').text(); }
                if (!enddate) { enddate = $('#enddate').prev('span').text(); }

                var vContainer = $("#recordlist");

                vContainer.empty();
                vContainer.load("/Admin/CommodityOrderlistTable", { state: state, st: startdate, ed: enddate, index: $('#hPageIndex').val() }, function () {
                    LoadEnd();
                });
            });
        });
    </script>

    <script>
        $(function () {
            //初始化
            Init();

            //默认查询
            //query();

            //事件绑定
            BindEvent();
        });

        //自定义方法区

        //页面初始化
        function Init() {
            //日期控件
            var startDate = $('#startdate');
            var endDate = $('#enddate');

            //计算初始日期
            var vDateNa = DateOperate(-7);
            var vDateNb = DateOperate(0);

            //给元素赋值属性
            startDate.attr('data-date', vDateNa);
            endDate.attr('data-date', vDateNb);

            //定时器
            setTimeout(function () {
                //1.赋予指定日期
                startDate.prev('span').text(vDateNa);
                endDate.prev('span').text(vDateNb);
            }, 500);

        }

        //绑定事件
        function BindEvent() {
            $('.order-type li').on('click', function () {
                //样式变换
                var vThis = $(this);
                vThis.addClass('cur').siblings().removeClass('cur');

                var vState = vThis.attr('uState');
                $('#hState').val(vState);

                //查询
                $('#btnQuery').click();
            });
        }

        //日期操作函数
        function DateOperate(n) {
            var uom = new Date(new Date() - 0 + n * 86400000);
            uom = uom.getFullYear() + "-" + (uom.getMonth() + 1) + "-" + uom.getDate();
            return uom;
        }

        //----- 订单相关操作方法 -----

        function LoadDialog(title, funOK, funClose) {
            $('#dialogTitle').text(title);

            //确定按钮
            $('#btnOK').unbind().on('click', funOK);

            //关闭按钮
            $('#btnClose').unbind().on('click', function () {
                DialogShowHide(false);

                if (funClose) { funClose(); }
            });
        }

        //1.修改价格
        function ChangePrice(orderID) {
            //Init Check
            var vEvent = event;
            var vArguments = arguments;

            if (!FuncCanOpeCheck(vEvent, vArguments)) { alert('无权进行此操作！'); return false; }

            LoadDialog('修改价格',
                function () { //确定修改价格按钮
                    var vLineIDs = '';
                    var vRealUnitPrices = '';
                    var vCounts = '';

                    $.each($('.pop_cont_input input'), function (index, item) {
                        var vItem = $(item);
                        vLineIDs += vItem.attr('uLineID') + ',';
                        vRealUnitPrices += vItem.val() + ',';
                        vCounts += vItem.attr('uCount') + ',';
                    });

                    $.get('/Admin/ChangeOrderPriceOpe',
                        { par1: vLineIDs, par2: vRealUnitPrices, par3: vCounts },
                        function (data) {
                            if (data && data.Flag) {
                                alert('价格修改成功！');

                                //数据刷新
                                $('#btnQuery').click();
                            }
                        },
                        'json');
                });

            //加载HTML
            $('.pop_cont_input').load('/Admin/ChangeOrderPrice', { par1: orderID }, function () {
                DialogShowHide(true);
            });
        }

        //2.关闭订单
        function OrderClose(orderID) {
            //Init Check
            var vEvent = event;
            var vArguments = arguments;

            if (!FuncCanOpeCheck(vEvent, vArguments)) { alert('无权进行此操作！'); return false; }

            var vResult = confirm('确定要关闭改订单？');

            if (vResult) {
                $.get('/Admin/OrderClose',
                    { par1: orderID },
                    function (data) {
                        if (data && data.Flag) {
                            //数据刷新
                            $('#btnQuery').click();
                        }
                        else {
                            alert(data.Msg);
                        }
                    },
                    'json');
            }
        }

        //3.填写快递单号
        function WriteExpNum(orderID, expCode, expNum) {
            //Init Check
            var vEvent = event;
            var vArguments = arguments;

            if (!FuncCanOpeCheck(vEvent, vArguments)) { alert('无权进行此操作！'); return false; }

            LoadDialog('填写快递单号',
                function () { //填写快递单号确定按钮
                    //Init
                    var vSelExp = $('#selExp');
                    var vExpCode = vSelExp.val();
                    var vExpType = $('option:selected', vSelExp).text();
                    var vInputExp = $('#txtExpNum');
                    var vExpNum = vInputExp.val();

                    //校验
                    if (vExpNum == null || vExpNum == undefined || vExpNum.trim() == '') {
                        ErrorTips(vInputExp, '请输入正确快递单号！');
                        return false;
                    }
                    else { ErrorTips(vInputExp, '', 'hide'); }

                    $.get('/Admin/WriteExpNumOpe',
                        { par1: $('#hOrderID').val(), par2: vExpCode, par3: vExpNum, par4: vExpType },
                        function (data) {
                            if (data.Flag) {
                                DialogShowHide(false);
                            }
                            else { //异常提示
                                alert('快递单号填写失败！')
                            }
                        },
                        'json');
                });

            //加载HTML
            $('.pop_cont_input').load('/Admin/WriteExpNum', { par1: orderID }, function () {
                //初始化快递信息
                if (expCode) { $('#selExp').val(expCode); $('#txtExpNum').val(expNum); }

                DialogShowHide(true);
            });
        }

        //用户输入异常信息提示
        function ErrorTips(vItem, vMsg, flag) {
            //1.首先判断有没有提示
            var vSpan = vItem.next('span');
            $.each(vSpan, function (index, item) {
                var vItem = $(item);
                if (flag) { vItem.remove(); return false; } //隐藏
                if (vItem.hasClass('errorTips')) {
                    vItem.text(vMsg);
                    return false;
                }
            });

            //2.没有提示
            if (!flag) {
                var vHtml = '<span class="errorTips">';
                vHtml += vMsg;
                vHtml += '</span>';
                vItem.after(vHtml);
            }
        }

        //弹窗展示隐藏具体代码
        function DialogShowHide(flag) {
            if (flag) { $(".pop_bg").fadeIn(); } //展示
            else { $(".pop_bg").fadeOut(); } //隐藏
        }

        //翻页相关

        //1.上一页
        function PreviousPage() {
            var vItem = $('#hPageIndex');
            var vIndex = parseInt(vItem.val());

            if (vIndex == 1) {
                alert('当前为第一页！');
                return false;
            }
            else {
                vIndex -= 1;
                vItem.val(vIndex);
                $('#btnQuery').click();
            }
        }

        //2.下一页
        function NextPage() {
            var vItem = $('#hPageIndex');
            var vIndex = parseInt($('#hPageIndex').val());

            vIndex += 1;
            vItem.val(vIndex);
            $('#btnQuery').click();

        }

        //OrderState + 可执行方法的配置信息
        var vStateFunctionConfig = { '0': [], '1': ['ChangePrice', 'OrderClose'], '3': ['WriteExpNum'] };

        //功能方法能否执行验证
        function FuncCanOpeCheck(vEvent, vArguments) {
            //当前State
            var vState = $(vEvent.currentTarget).attr('uState');
            //当前方法名
            var vFunName = vArguments.callee.name;

            //校验
            if (vStateFunctionConfig[vState].indexOf(vFunName) != -1) {
                return true;
            }
            return false;
        }
    </script>
}


<section>
    <div class="page_title">
        <h2 class="fl">订单详情</h2>
    </div>
</section>
<section>
    <h2><strong style="color:grey;">查询条件</strong></h2>
    <div>
        <ul class="uk-tab order-type">
            <li class="cur" uState="-1">全部</li>
            <li uState="1">待付款</li>
            <li uState="30">待发货</li>
            <li uState="31">已发货</li>
            <li uState="5">退款中</li>
            <li uState="6">已完成</li>
            <li uState="4">已关闭</li>
        </ul>
    </div>
    <div style="padding-left:30px;" class="br-margin">
        订单时间：
        <input type="text" class="J_Item" autocomplete="off" id="startdate" />    至    <input type="text" class="J_Item" autocomplete="off" id="enddate" />
        &nbsp; &nbsp; &nbsp; &nbsp;<input type="button" value="查询" class="group_btn" id="btnQuery" />
    </div>
    <div id="recordlist" class="br-margin foot-margin"></div>
</section>
<input type="hidden" value="-1" id="hState" />
<input type="hidden" value="1" id="hPageIndex" />

<section class="pop_bg">
    <div class="pop_cont">
        <h3 id="dialogTitle"></h3>
        <div class="pop_cont_input">
        </div>
        <div class="btm_btn">
            <input type="button" value="确认" class="input_btn trueBtn" id="btnOK">
            <input type="button" value="关闭" class="input_btn falseBtn" id="btnClose">
        </div>
    </div>
</section>
