@model IEnumerable<IGrouping<dynamic, dynamic>>
@{
    ViewBag.Title = "ShoppingList";
    Layout = "~/Views/Shared/_LayoutShop.cshtml";
}

<div class="uk-container">
    <div uRemark="结算" data-uk-sticky>
        <div class="uk-panel uk-panel-box uk-grid" style="height:130px;">
            <div class="uk-width-medium-1-5 uk-height-1-1 uk-vertical-align">
                <h1 class="uk-vertical-align-middle">
                    <div class="item-check" style="float:left;width:50px;"></div>
                    <lable for="cbAll" class="mobile-font" style="margin-left:10px;">全选</lable>
                </h1>
            </div>
            <div class="uk-width-medium-2-5 uk-height-1-1 uk-vertical-align">
                <h1 style="color:#FF0000" class="mobile-font uk-vertical-align-middle">合计：@ViewBag.SumPrice 元</h1>
            </div>
            <div class="uk-width-medium-2-5">
                <button class="uk-button uk-button-large uk-width-1-1 mobile-button" type="button" style="background-color:#f50;height:130px;" onclick="window.location.href='04OrderList.html';">
                    结算
                </button>
            </div>
        </div>
    </div>
    <div class="uk-block">
        <div uRemark="导航">
            <ul class="uk-tab" data-uk-tab="{connect:'#tab-content'}">
                <li class="uk-active uk-width-medium-1-4 active">
                    <h1 class="mobile-font">&nbsp&nbsp&nbsp购物车</h1>
                </li>
                <li class="uk-width-medium-1-4">
                    <h1 class="mobile-font">购物记录</h1>
                </li>
                <li class="uk-width-medium-1-4">
                    <h1 class="mobile-font">我的红包</h1>
                </li>
                <li class="uk-width-medium-1-4">
                    <h1 class="mobile-font">我的返现</h1>
                </li>
            </ul>
            <div class="br-box">
                <br />
            </div>
            <ul id="tab-content" class="uk-switcher">
                <li class="uk-active">
                    @{
                        foreach (var item in Model)
                        {
                            <div uRemark="编辑" class="uk-grid">
                                <div class="uk-width-1-1" style="height:25px;"></div>
                                <div class="uk-width-medium-1-2 uk-text-left mobile-font">店铺：@item.Key</div>
                                <div class="uk-width-medium-1-2 uk-text-right mobile-font"><a href="javascript:;" onclick="EditShopCommodity('@item.ElementAt(0).StoreID')">编辑</a></div>
                                <div class="uk-width-1-1" style="height:25px;"></div>
                            </div>
                            <br />

                            foreach (var vItem in item)
                            {
                                <div class="uk-panel uk-panel-box uk-flex uk-flex-space-between uk-flex-middle mobile-shopDiv" for="shopItmeNa">
                                    <div class="item-check"></div>
                                    <img src="~/@vItem.Photo" alt="" class="uk-thumbnail uk-width-medium-1-3 shoppList-img" style="width:300px;">
                                    <p class="uk-width-medium-1-3 uk-text-break mobile-shopItem" style="padding:0 15px;">@vItem.Title</p>
                                    <div class="uk-width-medium-1-3 mobile-font uk-text-align dCommCount" uid="@vItem.StoreID">
                                        <h1 style="color:red;">￥@(vItem.Count * vItem.RealPrice)</h1>
                                        <h1 style="color:red;">×@vItem.Count</h1>
                                        <button class="uk-button commodity-count-smile" style="display:none;" onclick="btnSub('@vItem.ID')">-</button>
                                        <button class="uk-button commodity-count-smile" disabled="disabled" style="display:none;">1</button>
                                        <button class="uk-button commodity-count-smile" style="display:none;" onclick="btnAdd('@vItem.ID')">+</button>
                                    </div>
                                </div>
                            }
                        }
                    }
                </li>
                <li>
                    <div class="uk-panel uk-panel-box uk-flex uk-flex-space-between uk-flex-middle mobile-shopDiv" for="shopItmeNa">
                        <input type="checkbox" class="mobile-radio" />
                        <img src="image/info/infoNb.jpg" alt="" class="uk-thumbnail uk-width-medium-2-10 shop-img" style="width:480px;">
                        <p class="uk-width-medium-5-10 uk-text-break mobile-shopItem">【第二批预售1月30日发货】最强大脑训练：《推理的迷宫》 + 《囚徒的困境》</p>
                        <div class="uk-width-medium-2-10 mobile-font">
                            <h1 style="color:red;">￥99.00</h1>
                            <h1 style="color:red;">×1</h1>
                        </div>
                    </div>
                </li>
                <li></li>
                <li></li>
            </ul>
        </div>
        <div uRemark="购物车列表"></div>
    </div>
</div>
@section LayoutShop{
    <script type="text/javascript">

        //自定义方法区

        //物品数量编辑按钮
        function EditShopCommodity(storeID) {
            var isEdit = true;

            var vThis = event.currentTarget;
            vThis = $(vThis);
            if (vThis.text() != '编辑') { isEdit = false; vThis.text('编辑'); }
            else { vThis.text('编辑完成'); }


            //找出所有的div对象 - 包含数量 + 价格
            var vDiv = $('.dCommCount');

            //循环，找到所属该商城的物品
            $.each(vDiv, function (index, item) {
                var vItem = $(item);
                if (vItem.attr('uid') == storeID) {
                    //需要同步数量 + 价格
                    var vH = $('h1', vItem);
                    var vCount = $(vH[1]).text().substr(1);

                    //进行赋值
                    var vBtn = $('button', vItem);
                    $(vBtn[1]).text(vCount);
                    if (isEdit) { vBtn.show(); }
                    else { vBtn.hide(); }
                }
            });
        }

        //商品减少
        function btnSub(shopID) {
            var vThis = event.currentTarget;

            //元素
            var vBtn = $(vThis).siblings('button')[0];
            var vH = $(vThis).siblings('h1');

            //调用方法
            btnCountChangeOpe('sub', $(vBtn), $(vH[1]), $(vH[0]), shopID);
        }


        //商品增加
        function btnAdd(shopID) {
            var vThis = event.currentTarget;

            //元素
            var vBtn = $(vThis).siblings('button')[1];
            var vH = $(vThis).siblings('h1');

            //调用方法
            btnCountChangeOpe('add', $(vBtn), $(vH[1]), $(vH[0]), shopID);
        }


        //商品个数增减按钮事件实现
        function btnCountChangeOpe(opeType, btnCount, showCount, showPrice, shopID) {
            var orderCount = btnCount.text();

            if (opeType == 'sub' && orderCount == '1') {
                return false;
            }

            var count = parseInt(orderCount);
            var price = parseFloat(showPrice.text().substr(1));
            var orgPrice = price / count;

            if (opeType == 'sub') { count = count - 1; }
            else { count = count + 1; }

            //进行Ajax请求
            $.get('/WeShop/ShoppingCountChange',
                { r: Math.random(), par1: shopID, par2: count },
                function (data) {
                    if (data && data.Flag) {
                        btnCount.text(count);
                        showCount.text('×' + count);

                        price = orgPrice * count;
                        showPrice.text('￥' + price);

                        return false;
                    }
                    else {
                        NotifyAlert('请重新操作！');
                    }
                }, 'json').fail(function () { NotifyAlert('请重新操作！'); });
        }
    </script>
}